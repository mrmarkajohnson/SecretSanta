@model RelationshipsVm
@{
    string statusExplanation = "Each relationship must be confirmed by both people involved. "
        + "If a relationship ends, it can be ignored if both people confirm they're happy to ignore it.";
}

<div class="mvc-grid mvc-grid-excel-mode" data-name=@string.Empty data-filter-mode="Excel" data-url=@string.Empty>
    <div class="mvc-grid-table relationships-table" 
        data-change-url="@Url.Action("ChangeRelationshipStatus", "Manage", new { Area = "Partners" }, Context.Request.Scheme, Context.Request.Host.ToString())"        
        data-delete-url="@Url.Action("DeleteRelationship", "Manage", new { Area = "Partners" }, Context.Request.Scheme, Context.Request.Host.ToString())">

        <table>
            <thead>
                <tr class="mvc-grid-headers">
                    <th>
                        <span class="mvc-grid-title">Name</span>
                    </th>
                    <th>
                        <span class="mvc-grid-title">UserName</span>
                    </th>
                    <th>
                        <span class="mvc-grid-title">Shared Group(s)</span>
                    </th>
                    <th>
                        <span class="mvc-grid-title">
                            Status
                            <span data-toggle="tooltip" data-html="true" data-bs-html="true" data-bs-container="body" title="@statusExplanation">
                                <i class="fa fa-circle-question fa-border"></i>
                            </span>
                        </span>
                    </th>
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model.PossibleRelationships.Count == 0)
                {
                    <tr>
                        <td colspan="4">
                            No relationships have been added yet.
                            <a asp-area="Partners" asp-controller="Manage" asp-action="AddRelationship">Add a Relationship</a>
                        </td>
                    </tr>
                }
                else
                {
                    @for (int i = 0; i < Model.PossibleRelationships.Count; i++)
                    {
                        var relationship = Model.PossibleRelationships[i];

                        <tr>
                            <td>
                                <span class="hidden">
                                    <input type="hidden" asp-for="PossibleRelationships[i].PartnerLinkKey" />
                                    <partial name="_UserHiddenInputs" for="PossibleRelationships[i].Partner" />                              
                                    <input type="hidden" asp-for="PossibleRelationships[i].SuggestedByCurrentUser" />
                                    <input type="hidden" asp-for="PossibleRelationships[i].AlreadyConfirmed" />
                                    <input type="hidden" asp-for="PossibleRelationships[i].SharedGroupNames" />
                                </span>
                                @relationship.Partner.UserDisplayName
                            </td>
                            <td>@relationship.Partner.UserName</td>
                            <td>@relationship.SharedGroupsDisplay</td>
                            <td>
                                @if (relationship.AvailableStatuses.Count == 1)
                                {
                                    <span class="hidden">
                                        <input type="hidden" asp-for="PossibleRelationships[i].Status" />
                                        @relationship.Status
                                    </span>
                                }
                                else
                                {
                                    <select asp-for="PossibleRelationships[i].Status" class="form-control relationship-status-select"
                                        asp-items="@relationship.AvailableStatuses" data-link-id="@relationship.PartnerLinkKey"
                                        data-hashed-user-id="@relationship.Partner.HashedUserId" data-name="@relationship.Partner.UserDisplayName"></select>
                                }
                            </td>
                            <td class="nowrap">
                                @if (relationship.AvailableStatuses.Count > 1)
                                {
                                    <a class="edit-relationship-link modal-link"
                                        data-url="@Url.Action("EditRelationship", "Manage", 
                                                    new { Area = "Partners", PartnerLinkKey = @relationship.PartnerLinkKey, hashedUserId = @relationship.Partner.HashedUserId },
                                                Context.Request.Scheme, Context.Request.Host.ToString())"
                                            data-toggle="tooltip" title="Edit this relationship"><i class="fa fa-pencil"></i></a>
                                }

                                @if (relationship.Status == RelationshipStatus.ToBeConfirmed 
                                    || (relationship.SuggestedByCurrentUser && relationship.AlreadyConfirmed == null))
                                {
                                    <a class="delete-relationship-link" data-link-id="@relationship.PartnerLinkKey" data-hashed-user-id="@relationship.Partner.HashedUserId" data-name="@relationship.Partner.UserDisplayName"
                                            data-toggle="tooltip" title="Delete this relationship"><i class="fa fa-xmark"></i></a>
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>