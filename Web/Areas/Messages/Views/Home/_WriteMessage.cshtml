@using static Global.Settings.MessageSettings

@model WriteMessageVm
@{
    string guidance = Model.IsReply
        ? "" : 
        $"Send a message to one or more members of {(Model.GiftingGroupKey > 0 ? "the" : "a")} group.";

    string selectGroupExplanation = "You can only message members in one of your groups. Please select the group first.";
    string headerExplanation = "Give your message a short subject";
    string textExplanation = "Write the main part of your message here.";
}

<partial name="_FormHiddenInputs" />

<div class="row @CenterFlexNoWrapContainer">

    <div class="collapse">
        <input type="hidden" asp-for="ReplyToMessageKey" />
        <input type="hidden" asp-for="IsModal" />
        <input type="hidden" asp-for="GroupKeyPreset" />
    </div>

    <div class="mb-5">

        @if (guidance.IsNotEmpty())
        {
            <div class="mt-2 mb-4 align-items-center justify-content-center align-content-center">
                <p>@guidance</p>
            </div>
        }

        @if (!Model.IsModal)
        {
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
        }

        <div class="@CenterFlexWrapContainer">
            <div class="@Model.GroupWidth">

                @if (!Model.GroupKeyPreset || Model.GiftingGroupKey.IsEmpty())
                {                        
                    <div class="mb-3">
                        <label asp-for="GiftingGroupKey" class="control-label"></label>
                        <div class="input-group input-info">
                            <select asp-for="GiftingGroupKey" class="form-control gifting-group-select" aria-required="true"
                                asp-items="Model.GroupSelection"
                                data-url="@Url.Action(Context, "ChooseMessageRecipient", "Home", "Messages")">

                                <option value="@null">@StandardPhrases.PleaseSelect</option>
                            </select>
                            <partial name="_InputQuestion" model="@selectGroupExplanation" />
                        </div>
                        <div>
                            <span asp-validation-for="GiftingGroupKey" class="text-danger"></span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="collapse">
                        <input type="hidden" asp-for="GiftingGroupKey" />
                    </div>

                    @if (Model.GroupSelection.Count > 1 && Model.GroupName.IsNotEmpty())
                    {
                        <div class="mb-3">
                            <label asp-for="GiftingGroupKey" class="control-label"></label>
                            <div class="control-label fw-normal">
                                @Model.GroupName
                            </div>
                        </div>
                    }
                }
                
                <div class="message-recipient-section">
                    <partial name="_ChooseMessageRecipient" />
                </div>

                <div class="mb-3">
                    <label asp-for="HeaderText" class="control-label"></label>
                    <div class="input-group input-info">
                        <input asp-for="HeaderText" class="form-control" aria-required="true" />
                        <partial name="_InputQuestion" model="@headerExplanation" />
                    </div>
                    <div>
                        <span asp-validation-for="HeaderText" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="MessageText" class="control-label"></label>
                    <div class="input-group input-info">
                        <div class="flex-grow-1">
                            @* This is needed to handle the flex group *@
                            <div class="collapse">
                                <input type="hidden" asp-for="MessageText" class="summernote-content" />
                            </div>

                            <div class="summernote form-control"></div>
                        </div>
                        <partial name="_InputQuestion" model="@textExplanation" />
                    </div>
                    <div>
                        <span asp-validation-for="MessageText" class="text-danger"></span>
                    </div>
                </div>

            </div>
        </div>

        @if (!Model.IsModal)
        {
            <br />
            <div class="col-md-12">
                <partial name="_SubmitButton" />
            </div>
        }
    </div>

</div>
