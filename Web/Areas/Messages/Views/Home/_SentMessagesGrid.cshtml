@using Global.Abstractions.Areas.Messages

@model IQueryable<ISantaMessageBase>
@{
    Func<ISantaMessageBase, object> actions =
    @<text>
        <a class="modal-link" data-url="@Url.Action(Context, "ViewSentMessage", "Home", "Messages", new { messageKey=item.MessageKey })"
           data-toggle="tooltip" title="View Message">
            <i class="fa fa-eye"></i>
        </a>
    </text>;
}

@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(x => x.Sent).RenderedAs(x => x.Sent.ToDateTimeString()).Titled("Sent");
        columns.Add(x => x.RecipientType).RenderedAs(x => x.RecipientType.MessageRecipientToDescription(x.GroupName)).Titled("To");
        columns.Add(x => x.HeaderText).Titled("Subject");
        columns.Add().RenderedAs(actions).Titled("Actions").Encoded(false).Css("nowrap");
    })
    .Pageable(pager =>
    {
        pager.PageSizes = new Dictionary<int, string> { { 0, "All" }, { 10, "10" }, { 20, "20" }, { 50, "50" } };
        pager.ShowPageSizes = true;
    })
    .UsingUrl(Url.Action("SentMessagesGrid") ?? "")
    .Empty("No messages found")
    .Id("messages-grid")
    .Filterable()
    .Sortable()
    .RowAttributed(x => new { @class = (x.Important ? "bold " : "") })
)
