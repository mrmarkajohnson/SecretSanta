@using Global.Abstractions.Areas.Messages
@model IQueryable<IReadMessage>
@{
    Func<IReadMessage, object> actions =
    @<text>
        <a class="modal-link" data-url="@Url.Action(Context, "ViewMessage", "Home", "Messages", new { messageRecipientKey = item.MessageRecipientKey })"
           data-toggle="tooltip" title="View Message">
            <i class="fa fa-eye"></i>
        </a>
    </text> ;
}

@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(x => x.Sent).RenderedAs(x => x.Sent.ToDateTimeString()).Titled("Sent");
        columns.Add(x => x.SenderName).Titled("From");
        columns.Add(x => x.RecipientTypes).RenderedAs(x => x.RecipientTypes.DisplayName()).Titled("To");
        columns.Add(x => x.HeaderText).Titled("Subject");
        columns.Add().RenderedAs(actions).Encoded(false);
    })
    .Pageable(pager =>
    {
        pager.PageSizes = new Dictionary<int, string> { { 0, "All" }, { 10, "10" }, { 20, "20" }, { 50, "50" } };
        pager.ShowPageSizes = true;
    })
    .UsingUrl(Url.Action("MessagesGrid"))
    .Empty("No messages found")
    .Id("messages-grid")
    .Filterable()
    .Sortable()
    .RowAttributed(model => new { @class = (model.Important ? "bold " : "") + (!model.Read ? "text-danger" : "") })
)
