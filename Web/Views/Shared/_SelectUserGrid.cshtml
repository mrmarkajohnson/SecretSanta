@using Global.Abstractions.Shared
@model UserGridVm
@{
    Func<IVisibleUser, object> actions =
    @<text>
        <input type="radio" class="user-select" name="UserSelect" data-hashed-user-id="@item.HashedUserId" data-name="@item.UserDisplayName" data-toggle="tooltip" title="Select" />
    </text>;

    Func<IVisibleUser, object> displayName =
    @<text>
        @item.UserDisplayName
        <partial name="_UserInfoCard" model="@item" />
    </text>;
}

@(Html
    .Grid(Model.Users)
    .Build(columns =>
    {
        columns.Add(x => x.UserDisplayName).RenderedAs(displayName).Titled("Name");
        columns.Add(x => x.UserName).Titled(UserDisplayNames.UserName);
        columns.Add(x => x.Email).RenderedAs(x => x.EmailForDisplay()).Titled(UserDisplayNames.Email);
        columns.Add().RenderedAs(actions).Titled("Actions").Encoded(false).Css("nowrap");
    })
    .Pageable(pager =>
    {
        pager.PageSizes = new Dictionary<int, string> { { 0, "All" }, { 10, "10" }, { 20, "20" }, { 50, "50" } };
        pager.ShowPageSizes = true;
    })
    .UsingUrl(Url.Action(Model.UserGridAction) ?? "")
    .Empty("Nobody found")
    .Id("select-user-grid")
    .Filterable()
    .Sortable()
)
