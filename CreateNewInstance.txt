ALL ENVIRONMENTS

1. Edit IdentitySettings and change SymmetricKeyStart (so that it's unique)
2. Go to Extensions and install BundlerMinifier2022+ and WebCompiler2022+
3. Close Visual Studio, allow the extensions to install, reopen VS and build
4. Follow the steps below for the relevant environment - see ConfigurationSettings for explanations of the settings
5. Run the application and register yourself, so that you become the system admin (the first user registered is the initial sysadmin)

If you get compilation errors for bundlerminifier, try commenting out the PrepareForBuildDependsOn entry from Web.csproj, and adding it back later.

LOCAL

1. Run the following commands in the PMC, replacing the parts in curly brackets with the desired details 
(NB: DO NOT change the symmetric key end once used! FromAddress and TestAddress must both have realistic domain endings):

dotnet user-secrets set "DatabaseSettings:SecretSantaUserId" "{desired-database-username]" --project "Data"
dotnet user-secrets set "DatabaseSettings:SecretSantaPassword" "{desired-database-password]" --project "Data"
dotnet user-secrets set "EncryptionSettings:SecretSantaSymmetricKeyEnd" "{desired-key]" --project "Data"
dotnet user-secrets set "MailSettings:FromAddress" "{desired-e-mail-address]" --project "Data"
dotnet user-secrets set "MailSettings:SmtpHost" "{desired-host-url]" --project "Data"
dotnet user-secrets set "MailSettings:UserName" "{desired-email-username]" --project "Data"
dotnet user-secrets set "MailSettings:Password" "{desired-email-password]" --project "Data"
dotnet user-secrets set "MailSettings:TestAddress" "{desired-test-email-address]" --project "Data"

2. If you don't want to use mssqllocaldb on local, run the following command in the PMC, replacing the curly brackets with the server name:

dotnet user-secrets set "DatabaseSettings:SecretSantaDatabaseServer" "{server-name]" --project "Data"

3. To create the database, run the following command in the PMC:

Update-Database -project "Data"

4. See 'Migrations.txt' in the Data project for any other migrations

LIVE/TEST

1. Create the database with name "SecretSanta", and make a secure note of the userID and password needed to connect

2. Create the following environment variables* for the database server name, UserID and password (above) respectively:

DatabaseSettings:SecretSantaDatabaseServer
DatabaseSettings:SecretSantaUserId
DatabaseSettings:SecretSantaPassword

3. Create the following environment variable using a (relatively) random string:

EncryptionSettings:SecretSantaSymmetricKeyEnd

4. Create the following environment variables for e-mail (FromAddress and TestAddress must both have realistic domain endings):

MailSettings:FromAddress
MailSettings:SmtpHost
MailSettings:UserName
MailSettings:Password
MailSettings:TestAddress (for non-production, any e-mails will go to this address, except when using the e-mail test harness)

5. Check any other settings in appsettings.json

6. To create the database structure, run the following command in the PMC:

Script-Migration

7. Copy the output, remove any insert or update statements, and run it in the database

* Depending on the environment, use a key vault, web.Release.config (for Web Deploy), or whatever secure tools are available