ALL ENVIRONMENTS

1. Edit IdentitySettings and change SymmetricKeyStart (so that it's unique)
2. Follow the steps below for the relevant environment
3. Run the application and register yourself, so that you become the system admin (the first user registered is the initial sysadmin)

DEVELOPMENT/TEST

1. To create the database administrator, run the following commands in the PMC, replacing the parts in curly brackets with the desired details 
(NB: DO NOT change the symmetric key once used!):

dotnet user-secrets set "DatabaseSettings:SecretSantaUserId" "{desired-username]" --project "Data"
dotnet user-secrets set "DatabaseSettings:SecretSantaPassword" "{desired-password]" --project "Data"
dotnet user-secrets set "EncryptionSettings:SecretSantaSymmetricKeyEnd" "{desired-key]" --project "Data"

2. If you don't want to use mssqllocaldb on local, run the following command in the PMC, replacing the curly brackets with the server name:

dotnet user-secrets set "DatabaseSettings:SecretSantaDatabaseServer" "{server-name]" --project "Data"

3. To create the database, run the following command in the PMC:

Update-Database -project "Data"

4. See 'Migrations.txt' in the Data project for any other migrations

LIVE

1. Create the database with name "SecretSanta", and make a secure note of the userID and password needed to connect

2. Create the following environment variables* for the database server name, UserID and password (above) respectively:

DatabaseSettings:SecretSantaDatabaseServer
DatabaseSettings:SecretSantaUserId
DatabaseSettings:SecretSantaPassword

3. Create the following environment variable using a (relatively) random string:

EncryptionSettings:SecretSantaSymmetricKeyEnd

4. To create the database structure, run the following command in the PMC:

Script-Migration

5. Copy the output, split it into separate transactions where any compilation errors would occur, and run it in the database

* Depending on the environment, use a key vault or whatever tools are available to protect the credentials